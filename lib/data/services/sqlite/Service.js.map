{"version":3,"sources":["../../../../src/data/services/sqlite/Service.js"],"names":["Service","sqliteDatabase","context","Error","type","entity"],"mappings":";;;;;;;;;;IAAqBA,O;AACjB,qBAAYC,cAAZ,EAA4BC,OAA5B,EAAqC;AAAA;;AACjC,YAAID,kBAAkB,IAAtB,EAA4B;AACxB,kBAAM,IAAIE,KAAJ,CAAU,qDAAV,CAAN;AACH;;AAED,YAAID,WAAW,IAAf,EAAqB;AACjB,kBAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACH;;AAED,aAAKF,cAAL,GAAsBA,cAAtB;AACA,aAAKC,OAAL,GAAeA,OAAf;AACH;;;;wCAEc,CAEd;;;uCAEcE,I,EAAMC,M,EAAO,CAE3B;;;0CAEgB,CAEhB;;;0CAEiBD,I,EAAMC,M,EAAO,CAE9B;;;oCAEWD,I,EAAMC,M,EAAO,CAExB;;;oCAEWD,I,EAAK,CAEhB;;;;;;kBApCgBJ,O","file":"Service.js","sourcesContent":["export default class Service {\r\n    constructor(sqliteDatabase, context) {\r\n        if (sqliteDatabase == null) {\r\n            throw new Error(\"The sqlite service needs to have a sqlite database.\");\r\n        }\r\n\r\n        if (context == null) {\r\n            throw new Error(\"The sqlite service needs to have a context.\");\r\n        }\r\n\r\n        this.sqliteDatabase = sqliteDatabase;\r\n        this.context = context;\r\n    }\r\n\r\n    activateAsync(){\r\n\r\n    }\r\n\r\n    addEntityAsync(type, entity){\r\n\r\n    }\r\n\r\n    deactivateAsync(){\r\n        \r\n    }\r\n\r\n    removeEntityAsync(type, entity){\r\n\r\n    }\r\n\r\n    updateAsync(type, entity){\r\n\r\n    }\r\n\r\n    asQueryable(type){\r\n\r\n    }\r\n\r\n}"]}